#
# Configuration for the EDG Replica Manager
#

# ==============================================================
#
# Locality. You can either give your local CE or local SE.
# this is used to bootstrap the info services and to know where
# we are located.
localDomain=cern.ch
defaultCE=adc0016.cern.ch
defaultSE=adc0025.cern.ch

# ==============================================================
#
# The URL Copy is implemented in pure Java, using CoG as well as
# through JNI using the native GassCopy client (as globus-url-copy).
# The two implementations at your disposal are:
#
# CoG
# Native
#
# you can also set the default number of streams for small and large files,
# and the threshold in MB when a file is considered to be 'large'.

#impl.globusURLCopy=CoG
impl.globusURLCopy=Native
default.nstreams.smallfiles=1
default.nstreams.bigfiles=3
filesize.threshold=1

# ==============================================================
#
# The GridFTP utilities like exists, ls, fileSize, mkdir are implemented
# either through CoG in pure Java or through JNI using the GridFTP client.
# Similarly as for the copy, the two implementations that you may use are
# 
# CoG
# Native
#
# For the native implementation, the name of the JNI library interfacing
# to gridFTP needs to be set in the library.gridFTP property. This
# dynamic library will be loaded from the classpath.

#impl.gridFTP=CoG
impl.gridFTP=Native
library.gridFTP=edg_rm_gridftp_gcc3_2_2

# ==============================================================
#
# Information service: The implementation of the Info
# service interface. 
#
# Available are:
# Stub  - local config file
# RGMA
# MDS
#

impl.infoService=MDS

# ==============================================================
#
# Replica Catalog type: The implementation of the
# replica catalog interface.
#
# Available are:
# LrcOnly -- a single LRC per VO
# WithRli -- a full RLS deployed
#

impl.ReplicaCatalog=LrcOnly

#
# The sections below are configuration options specific to these implementations.
#
# ---------
# InfoServiceStub : Local config file 'info provider'  
# ---------
# The InfoServiceStub implementation of the info provider interface
# reads all information from the configuration file given in the property
# config.infoService.
#
config.infoService=

# ---------
# InfoServiceRGMA : Use R-GMA 
# ---------
# R-GMA initializes itself from its properties, given by an environment
# variable RGMA_PROPS, where the file Consumer.props needs to exist.
# Additional configuration options are the timeout (in seconds) to
# wait for a response.
#
rgma.timeout=60

# ---------
# InfoServiceMDS : Use MDS 
# ---------
# The mds.url property will set the endpoint of the service
# to connect to, the mds.root property sets the root element
# of the initial context.
# If another ldap context is used than the one provided by
# sun, its name can be given in the mds.ldap.contextfactory property.
#
mds.url=ldap://edt003.cnaf.infn.it:2170
mds.root=mds-vo-name=local,o=grid
mds.ldap.contextfactory=com.sun.jndi.ldap.LdapCtxFactory

# ==============================================================
#
# SRM specific properties.
# set the retry and timeout intervals for MSS requests (in seconds)
#
# the failure policy may be either none (just fail), gridftp (try gridftp instead) 
# or retry N where N is a number indicating the number of retries. example: 
#
#   srm.connection.failurepolicy=retry 2
#
# will retry twice, i.e. try to connect 3 times in total before sending
# a connection failure.
#
srm.prepareToGet.retryinterval=10
srm.prepareToGet.timeout=3600
srm.prepareToPut.retryinterval=10
srm.prepareToPut.timeout=300
srm.connection.failurepolicy=none

# ==============================================================
#
# Miscellaneous
#
# Failure if not ROS is available
# This may be set to 'false' if you want the replica manager
# not to complain if ROS is unavailable. The replica selection
# for getBestFile and listBestFile will be a simple random function
# and corresponds rather to getRandomFile and listRandomFile, respectively. 
failIfNoROS=false

# Filenames like LFNs, GUIDs, SURLs have filename prefixes "lfn:", "guid:",
# "srm:", respectively. For RLS/RMC interactions, this prefixing can be
# ignored and only the filename is used _without_ the prefex. However, the
# user interface is not changed and one still needs to provide the prefix.
#
# Possible cases:
#ignorePrefix=true
#ignorePrefix=false
#
ignorePrefix=true
